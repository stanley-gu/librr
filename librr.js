var FFI = require('ffi'),
    ArrayType = require('ref-array'),
    Struct = require('ref-struct'),
    ref = require('ref');
var voidPtr = ref.refType(ref.types.void);
exports.CONSTANTS = {
    CLogLevel: {
        '0': 'clError',
        '1': 'clWarning',
        '2': 'clInfo',
        '3': 'clDebug',
        '4': 'clDebug1',
        '5': 'clDebug2',
        '6': 'clDebug3',
        '7': 'clDebug4',
        '8': 'clDebug5',
        '9': 'clAny',
        '10': 'clUser',
        clShowAlways: -1,
        '-1': 'clShowAlways',
        clError: 0,
        clWarning: 1,
        clInfo: 2,
        clDebug: 3,
        clDebug1: 4,
        clDebug2: 5,
        clDebug3: 6,
        clDebug4: 7,
        clDebug5: 8,
        clAny: 9,
        clUser: 10
    },
    ListItemType: {
        '0': 'litString',
        '1': 'litInteger',
        '2': 'litDouble',
        '3': 'litList',
        litString: 0,
        litInteger: 1,
        litDouble: 2,
        litList: 3
    }
};
var RRHandle = exports.RRHandle = voidPtr;
var RRHandlePtr = exports.RRHandlePtr = ref.refType(RRHandle);
var RRInstanceListHandle = exports.RRInstanceListHandle = voidPtr;
var RRInstanceListHandlePtr = exports.RRInstanceListHandlePtr = ref.refType(RRInstanceListHandle);
var RRCCodeHandle = exports.RRCCodeHandle = voidPtr;
var RRCCodeHandlePtr = exports.RRCCodeHandlePtr = ref.refType(RRCCodeHandle);
var RRJobHandle = exports.RRJobHandle = voidPtr;
var RRJobHandlePtr = exports.RRJobHandlePtr = ref.refType(RRJobHandle);
var RRJobsHandle = exports.RRJobsHandle = voidPtr;
var RRJobsHandlePtr = exports.RRJobsHandlePtr = ref.refType(RRJobsHandle);
var RRStringArrayHandle = exports.RRStringArrayHandle = voidPtr;
var RRStringArrayHandlePtr = exports.RRStringArrayHandlePtr = ref.refType(RRStringArrayHandle);
var RRResultHandle = exports.RRResultHandle = voidPtr;
var RRResultHandlePtr = exports.RRResultHandlePtr = ref.refType(RRResultHandle);
var RRVectorHandle = exports.RRVectorHandle = voidPtr;
var RRVectorHandlePtr = exports.RRVectorHandlePtr = ref.refType(RRVectorHandle);
var RRMatrixHandle = exports.RRMatrixHandle = voidPtr;
var RRMatrixHandlePtr = exports.RRMatrixHandlePtr = ref.refType(RRMatrixHandle);
var RRListHandle = exports.RRListHandle = voidPtr;
var RRListHandlePtr = exports.RRListHandlePtr = ref.refType(RRListHandle);
var RRListItemHandle = exports.RRListItemHandle = voidPtr;
var RRListItemHandlePtr = exports.RRListItemHandlePtr = ref.refType(RRListItemHandle);
var RRParameterHandle = exports.RRParameterHandle = voidPtr;
var RRParameterHandlePtr = exports.RRParameterHandlePtr = ref.refType(RRParameterHandle);
exports.librr_c_api = new FFI.Library('librr_c_api', {
    createRRInstance: [RRHandle, []],
    createRRInstanceE: [RRHandle, [ref.types.CString]],
    createRRInstances: [RRInstanceListHandle, [ref.types.int32]],
    freeRRInstance: [ref.types.int32, [RRHandle]],
    freeRRInstances: [ref.types.int32, [RRInstanceListHandle]],
    getInstallFolder: [ref.types.CString, []],
    setInstallFolder: [ref.types.int32, [ref.types.CString]],
    getVersion: [ref.types.CString, [RRHandle]],
    getBuildDate: [ref.types.CString, []],
    getBuildTime: [ref.types.CString, []],
    getBuildDateTime: [ref.types.CString, []],
    getCopyright: [ref.types.CString, [RRHandle]],
    getInfo: [ref.types.CString, [RRHandle]],
    getlibSBMLVersion: [ref.types.CString, [RRHandle]],
    setTempFolder: [ref.types.int32, [RRHandle, ref.types.CString]],
    getTempFolder: [ref.types.CString, [RRHandle]],
    getWorkingDirectory: [ref.types.CString, []],
    getRRCAPILocation: [ref.types.CString, []],
    setCompiler: [ref.types.int32, [RRHandle, ref.types.CString]],
    setCompilerLocation: [ref.types.int32, [RRHandle, ref.types.CString]],
    getCompilerLocation: [ref.types.CString, [RRHandle]],
    setSupportCodeFolder: [ref.types.int32, [RRHandle, ref.types.CString]],
    getSupportCodeFolder: [ref.types.CString, [RRHandle]],
    getCCode: [RRCCodeHandle, [RRHandle]],
    enableLoggingToConsole: [ref.types.int32, []],
    enableLoggingToFile: [ref.types.int32, [RRHandle]],
    logMsg: [ref.types.void, [ref.types.int32, ref.types.CString]],
    testString: [ref.types.CString, [ref.types.CString]],
    setLogLevel: [ref.types.int32, [ref.types.CString]],
    getLogLevel: [ref.types.CString, []],
    getLogFileName: [ref.types.CString, []],
    hasError: [ref.types.int32, []],
    getLastError: [ref.types.CString, []],
    setComputeAndAssignConservationLaws: [ref.types.int32, [RRHandle, ref.types.int32]],
    loadSBML: [ref.types.int32, [RRHandle, ref.types.CString]],
    loadSBMLE: [ref.types.int32, [RRHandle, ref.types.CString, ref.types.int32]],
    loadSBMLFromFile: [ref.types.int32, [RRHandle, ref.types.CString]],
    loadSBMLFromFileE: [ref.types.int32, [RRHandle, ref.types.CString, ref.types.int32]],
    loadSBMLFromFileJob: [RRJobHandle, [RRHandle, ref.types.CString]],
    loadSBMLFromFileJobs: [RRJobsHandle, [RRInstanceListHandle, ref.types.CString, ref.types.int32]],
    waitForJob: [ref.types.int32, [RRJobHandle]],
    waitForJobs: [ref.types.int32, [RRJobsHandle]],
    isJobFinished: [ref.types.int32, [RRJobHandle]],
    areJobsFinished: [ref.types.int32, [RRJobsHandle]],
    getNumberOfRemainingJobs: [ref.types.int32, [RRJobsHandle]],
    loadSimulationSettings: [ref.types.int32, [RRHandle, ref.types.CString]],
    getCurrentSBML: [ref.types.CString, [RRHandle]],
    getSBML: [ref.types.CString, [RRHandle]],
    unLoadModel: [ref.types.int32, [RRHandle]],
    getParamPromotedSBML: [ref.types.CString, [RRHandle, ref.types.CString]],
    setCapabilities: [ref.types.int32, [RRHandle, ref.types.CString]],
    getCapabilities: [ref.types.CString, [RRHandle]],
    setTimeStart: [ref.types.int32, [RRHandle, ref.types.double]],
    setTimeEnd: [ref.types.int32, [RRHandle, ref.types.double]],
    setNumPoints: [ref.types.int32, [RRHandle, ref.types.int32]],
    createTimeCourseSelectionList: [ref.types.int32, [RRHandle]],
    setTimeCourseSelectionList: [ref.types.int32, [RRHandle, ref.types.CString]],
    getTimeCourseSelectionList: [RRStringArrayHandle, [RRHandle]],
    simulate: [RRResultHandle, [RRHandle]],
    simulateJob: [RRJobHandle, [RRHandle]],
    simulateJobs: [RRJobsHandle, [RRInstanceListHandle, ref.types.int32]],
    getSimulationResult: [RRResultHandle, [RRHandle]],
    simulateEx: [RRResultHandle, [RRHandle, ref.types.double, ref.types.double, ref.types.int32]],
    oneStep: [ref.types.int32, [RRHandle, ref.types.double, ref.types.double, voidPtr]],
    getTimeStart: [ref.types.int32, [RRHandle, voidPtr]],
    getTimeEnd: [ref.types.int32, [RRHandle, voidPtr]],
    getNumPoints: [ref.types.int32, [RRHandle, voidPtr]],
    steadyState: [ref.types.int32, [RRHandle, voidPtr]],
    computeSteadyStateValues: [RRVectorHandle, [RRHandle]],
    setSteadyStateSelectionList: [ref.types.int32, [RRHandle, ref.types.CString]],
    getSteadyStateSelectionList: [RRStringArrayHandle, [RRHandle]],
    getValue: [ref.types.int32, [RRHandle, ref.types.CString, voidPtr]],
    setValue: [ref.types.int32, [RRHandle, ref.types.CString, ref.types.double]],
    getFloatingSpeciesConcentrations: [RRVectorHandle, [RRHandle]],
    getBoundarySpeciesConcentrations: [RRVectorHandle, [RRHandle]],
    getGlobalParameterValues: [RRVectorHandle, [RRHandle]],
    setBoundarySpeciesByIndex: [ref.types.int32, [RRHandle, ref.types.int32, ref.types.double]],
    setFloatingSpeciesByIndex: [ref.types.int32, [RRHandle, ref.types.int32, ref.types.double]],
    setGlobalParameterByIndex: [ref.types.int32, [RRHandle, ref.types.int32, ref.types.double]],
    getBoundarySpeciesByIndex: [ref.types.int32, [RRHandle, ref.types.int32, voidPtr]],
    getFloatingSpeciesByIndex: [ref.types.int32, [RRHandle, ref.types.int32, voidPtr]],
    getGlobalParameterByIndex: [ref.types.int32, [RRHandle, ref.types.int32, voidPtr]],
    getCompartmentByIndex: [ref.types.int32, [RRHandle, ref.types.int32, voidPtr]],
    setCompartmentByIndex: [ref.types.int32, [RRHandle, ref.types.int32, ref.types.double]],
    setFloatingSpeciesConcentrations: [ref.types.int32, [RRHandle, voidPtr]],
    setBoundarySpeciesConcentrations: [ref.types.int32, [RRHandle, voidPtr]],
    getFullJacobian: [RRMatrixHandle, [RRHandle]],
    getReducedJacobian: [RRMatrixHandle, [RRHandle]],
    getEigenvalues: [RRMatrixHandle, [RRHandle]],
    getEigenvaluesMatrix: [RRMatrixHandle, [RRHandle, RRMatrixHandle]],
    getStoichiometryMatrix: [RRMatrixHandle, [RRHandle]],
    getLinkMatrix: [RRMatrixHandle, [RRHandle]],
    getNrMatrix: [RRMatrixHandle, [RRHandle]],
    getL0Matrix: [RRMatrixHandle, [RRHandle]],
    getConservationMatrix: [RRMatrixHandle, [RRHandle]],
    reset: [ref.types.int32, [RRHandle]],
    setFloatingSpeciesInitialConcentrations: [ref.types.int32, [RRHandle, voidPtr]],
    getFloatingSpeciesInitialConcentrations: [RRVectorHandle, [RRHandle]],
    getFloatingSpeciesInitialConditionIds: [RRStringArrayHandle, [RRHandle]],
    getNumberOfReactions: [ref.types.int32, [RRHandle]],
    getReactionRate: [ref.types.int32, [RRHandle, ref.types.int32, voidPtr]],
    getReactionRates: [RRVectorHandle, [RRHandle]],
    getReactionRatesEx: [RRVectorHandle, [RRHandle, RRVectorHandle]],
    getRatesOfChange: [RRVectorHandle, [RRHandle]],
    getRatesOfChangeIds: [RRStringArrayHandle, [RRHandle]],
    getRateOfChange: [ref.types.int32, [RRHandle, ref.types.int32, voidPtr]],
    getRatesOfChangeEx: [RRVectorHandle, [RRHandle, RRVectorHandle]],
    evalModel: [ref.types.int32, [RRHandle]],
    getNumberOfCompartments: [ref.types.int32, [RRHandle]],
    getNumberOfBoundarySpecies: [ref.types.int32, [RRHandle]],
    getNumberOfFloatingSpecies: [ref.types.int32, [RRHandle]],
    getNumberOfGlobalParameters: [ref.types.int32, [RRHandle]],
    getNumberOfDependentSpecies: [ref.types.int32, [RRHandle]],
    getNumberOfIndependentSpecies: [ref.types.int32, [RRHandle]],
    getReactionIds: [RRStringArrayHandle, [RRHandle]],
    getBoundarySpeciesIds: [RRStringArrayHandle, [RRHandle]],
    getFloatingSpeciesIds: [RRStringArrayHandle, [RRHandle]],
    getGlobalParameterIds: [RRStringArrayHandle, [RRHandle]],
    getCompartmentIds: [RRStringArrayHandle, [RRHandle]],
    getEigenvalueIds: [RRStringArrayHandle, [RRHandle]],
    getAvailableTimeCourseSymbols: [RRListHandle, [RRHandle]],
    getAvailableSteadyStateSymbols: [RRListHandle, [RRHandle]],
    getElasticityCoefficientIds: [RRListHandle, [RRHandle]],
    getUnscaledFluxControlCoefficientIds: [RRListHandle, [RRHandle]],
    getFluxControlCoefficientIds: [RRListHandle, [RRHandle]],
    getUnscaledConcentrationControlCoefficientIds: [RRListHandle, [RRHandle]],
    getConcentrationControlCoefficientIds: [RRListHandle, [RRHandle]],
    getUnscaledElasticityMatrix: [RRMatrixHandle, [RRHandle]],
    getScaledElasticityMatrix: [RRMatrixHandle, [RRHandle]],
    getScaledFloatingSpeciesElasticity: [ref.types.int32, [RRHandle, ref.types.CString, ref.types.CString, voidPtr]],
    getUnscaledConcentrationControlCoefficientMatrix: [RRMatrixHandle, [RRHandle]],
    getScaledConcentrationControlCoefficientMatrix: [RRMatrixHandle, [RRHandle]],
    getUnscaledFluxControlCoefficientMatrix: [RRMatrixHandle, [RRHandle]],
    getScaledFluxControlCoefficientMatrix: [RRMatrixHandle, [RRHandle]],
    getuCC: [ref.types.int32, [RRHandle, ref.types.CString, ref.types.CString, voidPtr]],
    getCC: [ref.types.int32, [RRHandle, ref.types.CString, ref.types.CString, voidPtr]],
    getEE: [ref.types.int32, [RRHandle, ref.types.CString, ref.types.CString, voidPtr]],
    getuEE: [ref.types.int32, [RRHandle, ref.types.CString, ref.types.CString, voidPtr]],
    getScaledFloatingSpeciesElasticity: [ref.types.int32, [RRHandle, ref.types.CString, ref.types.CString, voidPtr]],
    getNumberOfRules: [ref.types.int32, [RRHandle]],
    resultToString: [ref.types.CString, [RRResultHandle]],
    matrixToString: [ref.types.CString, [RRMatrixHandle]],
    vectorToString: [ref.types.CString, [RRVectorHandle]],
    getNumberOfStringElements: [ref.types.int32, [RRStringArrayHandle]],
    getStringElement: [ref.types.CString, [RRStringArrayHandle, ref.types.int32]],
    stringArrayToString: [ref.types.CString, [RRStringArrayHandle]],
    listToString: [ref.types.CString, [RRListHandle]],
    freeResult: [ref.types.int32, [RRResultHandle]],
    freeText: [ref.types.int32, [ref.types.CString]],
    freeStringArray: [ref.types.int32, [RRStringArrayHandle]],
    freeVector: [ref.types.int32, [RRVectorHandle]],
    freeMatrix: [ref.types.int32, [RRMatrixHandle]],
    freeCCode: [ref.types.int32, [RRCCodeHandle]],
    pause: [ref.types.void, []],
    getVectorLength: [ref.types.int32, [RRVectorHandle]],
    createVector: [RRVectorHandle, [ref.types.int32]],
    getVectorElement: [ref.types.int32, [RRVectorHandle, ref.types.int32, voidPtr]],
    setVectorElement: [ref.types.int32, [RRVectorHandle, ref.types.int32, ref.types.double]],
    createRRMatrix: [RRMatrixHandle, [ref.types.int32, ref.types.int32]],
    getMatrixNumRows: [ref.types.int32, [RRMatrixHandle]],
    getMatrixNumCols: [ref.types.int32, [RRMatrixHandle]],
    getMatrixElement: [ref.types.int32, [RRMatrixHandle, ref.types.int32, ref.types.int32, voidPtr]],
    setMatrixElement: [ref.types.int32, [RRMatrixHandle, ref.types.int32, ref.types.int32, ref.types.double]],
    getResultNumRows: [ref.types.int32, [RRResultHandle]],
    getResultNumCols: [ref.types.int32, [RRResultHandle]],
    getResultElement: [ref.types.int32, [RRResultHandle, ref.types.int32, ref.types.int32, voidPtr]],
    getResultColumnLabel: [ref.types.CString, [RRResultHandle, ref.types.int32]],
    getCCodeHeader: [ref.types.CString, [RRCCodeHandle]],
    getCCodeSource: [ref.types.CString, [RRCCodeHandle]],
    getCSourceFileName: [ref.types.CString, [RRHandle]],
    createRRList: [RRListHandle, []],
    freeRRList: [ref.types.void, [RRListHandle]],
    getListLength: [ref.types.int32, [RRListHandle]],
    createIntegerItem: [RRListItemHandle, [ref.types.int32]],
    createDoubleItem: [RRListItemHandle, [ref.types.double]],
    createStringItem: [RRListItemHandle, [ref.types.CString]],
    createListItem: [RRListItemHandle, [voidPtr]],
    addItem: [ref.types.int32, [RRListHandle, RRListItemHandlePtr]],
    getListItem: [RRListItemHandle, [RRListHandle, ref.types.int32]],
    isListItemInteger: [ref.types.int32, [RRListItemHandle]],
    isListItemDouble: [ref.types.int32, [RRListItemHandle]],
    isListItemString: [ref.types.int32, [RRListItemHandle]],
    isListItemList: [ref.types.int32, [RRListItemHandle]],
    isListItem: [ref.types.int32, [RRListItemHandle, ref.types.uint32]],
    getIntegerListItem: [ref.types.int32, [RRListItemHandle, voidPtr]],
    getDoubleListItem: [ref.types.int32, [RRListItemHandle, voidPtr]],
    getStringListItem: [ref.types.CString, [RRListItemHandle]],
    getList: [RRListHandle, [RRListItemHandle]],
    getInstanceCount: [ref.types.int32, [RRInstanceListHandle]],
    getRRHandle: [RRHandle, [RRInstanceListHandle, ref.types.int32]],
    writeRRData: [ref.types.int32, [RRHandle, ref.types.CString]],
    writeMultipleRRData: [ref.types.int32, [RRInstanceListHandle, ref.types.CString]],
    loadPlugins: [ref.types.int32, [RRHandle]],
    unLoadPlugins: [ref.types.int32, [RRHandle]],
    getNumberOfPlugins: [ref.types.int32, [RRHandle]],
    getPluginNames: [voidPtr, [RRHandle]],
    getPluginCapabilities: [voidPtr, [RRHandle, ref.types.CString]],
    getPluginParameters: [voidPtr, [RRHandle, ref.types.CString, ref.types.CString]],
    getPluginParameter: [RRParameterHandle, [RRHandle, ref.types.CString, ref.types.CString]],
    setPluginParameter: [ref.types.int32, [RRHandle, ref.types.CString, ref.types.CString, ref.types.CString]],
    getPluginInfo: [ref.types.CString, [RRHandle, ref.types.CString]],
    executePlugin: [ref.types.int32, [RRHandle, ref.types.CString]],
    compileSource: [ref.types.int32, [RRHandle, ref.types.CString]],
});
