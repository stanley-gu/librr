var FFI = require('ffi'),
    ArrayType = require('ref-array'),
    Struct = require('ref-struct'),
    ref = require('ref');
var voidPtr = ref.refType(ref.types.void);
exports.CONSTANTS = {
    ListItemType: {
        '0': 'litString',
        '1': 'litInteger',
        '2': 'litDouble',
        '3': 'litList',
        litString: 0,
        litInteger: 1,
        litDouble: 2,
        litList: 3
    }
};
var RRHandle = exports.RRHandle = voidPtr;
var RRHandlePtr = exports.RRHandlePtr = ref.refType(RRHandle);
var RRStringArrayHandle = exports.RRStringArrayHandle = voidPtr;
var RRStringArrayHandlePtr = exports.RRStringArrayHandlePtr = ref.refType(RRStringArrayHandle);
var RRResultHandle = exports.RRResultHandle = voidPtr;
var RRResultHandlePtr = exports.RRResultHandlePtr = ref.refType(RRResultHandle);
var RRVectorHandle = exports.RRVectorHandle = voidPtr;
var RRVectorHandlePtr = exports.RRVectorHandlePtr = ref.refType(RRVectorHandle);
var RRMatrixHandle = exports.RRMatrixHandle = voidPtr;
var RRMatrixHandlePtr = exports.RRMatrixHandlePtr = ref.refType(RRMatrixHandle);
var RRListHandle = exports.RRListHandle = voidPtr;
var RRListHandlePtr = exports.RRListHandlePtr = ref.refType(RRListHandle);
var RRCCodeHandle = exports.RRCCodeHandle = voidPtr;
var RRCCodeHandlePtr = exports.RRCCodeHandlePtr = ref.refType(RRCCodeHandle);
var RRListItemHandle = exports.RRListItemHandle = voidPtr;
var RRListItemHandlePtr = exports.RRListItemHandlePtr = ref.refType(RRListItemHandle);

exports.librr_c_api = new FFI.Library('librr_c_api', {
    getVersion: [ref.types.CString, []],
    getBuildDate: [ref.types.CString, []],
    getBuildTime: [ref.types.CString, []],
    getBuildDateTime: [ref.types.CString, []],
    getCopyright: [ref.types.CString, []],
    getInfo: [ref.types.CString, []],
    getlibSBMLVersion: [ref.types.CString, []],
    setTempFolder: [ref.types.int32, [ref.types.CString]],
    getTempFolder: [ref.types.CString, []],
    getWorkingDirectory: [ref.types.CString, []],
    getRRCAPILocation: [ref.types.CString, []],
    setCompiler: [ref.types.int32, [ref.types.CString]],
    setCompilerLocation: [ref.types.int32, [ref.types.CString]],
    getCompilerLocation: [ref.types.CString, []],
    setSupportCodeFolder: [ref.types.int32, [ref.types.CString]],
    getSupportCodeFolder: [ref.types.CString, []],
    getCCode: [voidPtr, []],
    setCodeGenerationMode: [ref.types.int32, [ref.types.int32]],
    enableLogging: [ref.types.int32, []],
    setLogLevel: [ref.types.int32, [ref.types.CString]],
    getLogLevel: [ref.types.CString, []],
    getLogFileName: [ref.types.CString, []],
    hasError: [ref.types.int32, []],
    getLastError: [ref.types.CString, []],
    getRRInstance: [RRHandle, []],
    freeRRInstance: [ref.types.int32, [RRHandle]],
    setComputeAndAssignConservationLaws: [ref.types.int32, [ref.types.int32]],
    loadSBML: [ref.types.int32, [ref.types.CString]],
    loadSBMLFromFile: [ref.types.int32, [ref.types.CString]],
    loadSimulationSettings: [ref.types.int32, [ref.types.CString]],
    getCurrentSBML: [ref.types.CString, []],
    getSBML: [ref.types.CString, []],
    unLoadModel: [ref.types.int32, []],
    getParamPromotedSBML: [ref.types.CString, [ref.types.CString]],
    setCapabilities: [ref.types.int32, [ref.types.CString]],
    getCapabilities: [ref.types.CString, []],
    setTimeStart: [ref.types.int32, [ref.types.double]],
    setTimeEnd: [ref.types.int32, [ref.types.double]],
    setNumPoints: [ref.types.int32, [ref.types.int32]],
    createTimeCourseSelectionList: [ref.types.int32, []],
    setTimeCourseSelectionList: [ref.types.int32, [ref.types.CString]],
    getTimeCourseSelectionList: [RRStringArrayHandle, []],
    simulate: [RRResultHandle, []],
    simulateEx: [RRResultHandle, [ref.types.double]],
    oneStep: [ref.types.int32, [ref.types.double]],
    getTimeStart: [ref.types.int32, [ref.types.double]],
    getTimeEnd: [ref.types.int32, [ref.types.double]],
    getNumPoints: [ref.types.int32, [ref.types.int32]],
    steadyState: [ref.types.int32, [ref.types.double]],
    computeSteadyStateValues: [RRVectorHandle, []],
    setSteadyStateSelectionList: [ref.types.int32, [ref.types.CString]],
    getSteadyStateSelectionList: [RRStringArrayHandle, []],
    getValue: [ref.types.int32, [ref.types.CString, ref.types.double]],
    setValue: [ref.types.int32, [ref.types.CString, ref.types.double]],
    getFloatingSpeciesConcentrations: [RRVectorHandle, []],
    getBoundarySpeciesConcentrations: [RRVectorHandle, []],
    getGlobalParameterValues: [RRVectorHandle, []],
    setBoundarySpeciesByIndex: [ref.types.int32, [ref.types.int32]],
    setFloatingSpeciesByIndex: [ref.types.int32, [ref.types.int32]],
    setGlobalParameterByIndex: [ref.types.int32, [ref.types.int32]],
    getBoundarySpeciesByIndex: [ref.types.int32, [ref.types.int32]],
    getFloatingSpeciesByIndex: [ref.types.int32, [ref.types.int32]],
    getGlobalParameterByIndex: [ref.types.int32, [ref.types.int32]],
    getCompartmentByIndex: [ref.types.int32, [ref.types.int32]],
    setCompartmentByIndex: [ref.types.int32, [ref.types.int32]],
    setFloatingSpeciesConcentrations: [ref.types.int32, [voidPtr]],
    setBoundarySpeciesConcentrations: [ref.types.int32, [voidPtr]],
    getFullJacobian: [RRMatrixHandle, []],
    getReducedJacobian: [RRMatrixHandle, []],
    getEigenvalues: [RRMatrixHandle, []],
    getEigenvaluesMatrix: [RRMatrixHandle, [RRMatrixHandle]],
    getStoichiometryMatrix: [RRMatrixHandle, []],
    getLinkMatrix: [RRMatrixHandle, []],
    getNrMatrix: [RRMatrixHandle, []],
    getL0Matrix: [RRMatrixHandle, []],
    getConservationMatrix: [RRMatrixHandle, []],
    reset: [ref.types.int32, []],
    setFloatingSpeciesInitialConcentrations: [ref.types.int32, [voidPtr]],
    getFloatingSpeciesInitialConcentrations: [RRVectorHandle, []],
    getFloatingSpeciesInitialConditionIds: [RRStringArrayHandle, []],
    getNumberOfReactions: [ref.types.int32, []],
    getReactionRate: [ref.types.int32, [ref.types.int32]],
    getReactionRates: [RRVectorHandle, []],
    getReactionRatesEx: [RRVectorHandle, [RRVectorHandle]],
    getRatesOfChange: [RRVectorHandle, []],
    getRatesOfChangeIds: [RRStringArrayHandle, []],
    getRateOfChange: [ref.types.int32, [ref.types.int32]],
    getRatesOfChangeEx: [RRVectorHandle, [RRVectorHandle]],
    evalModel: [ref.types.int32, []],
    getNumberOfCompartments: [ref.types.int32, []],
    getNumberOfBoundarySpecies: [ref.types.int32, []],
    getNumberOfFloatingSpecies: [ref.types.int32, []],
    getNumberOfGlobalParameters: [ref.types.int32, []],
    getNumberOfDependentSpecies: [ref.types.int32, []],
    getNumberOfIndependentSpecies: [ref.types.int32, []],
    getReactionIds: [RRStringArrayHandle, []],
    getBoundarySpeciesIds: [RRStringArrayHandle, []],
    getFloatingSpeciesIds: [RRStringArrayHandle, []],
    getGlobalParameterIds: [RRStringArrayHandle, []],
    getCompartmentIds: [RRStringArrayHandle, []],
    getEigenvalueIds: [RRStringArrayHandle, []],
    getAvailableTimeCourseSymbols: [RRListHandle, []],
    getAvailableSteadyStateSymbols: [RRListHandle, []],
    getElasticityCoefficientIds: [RRListHandle, []],
    getUnscaledFluxControlCoefficientIds: [RRListHandle, []],
    getFluxControlCoefficientIds: [RRListHandle, []],
    getUnscaledConcentrationControlCoefficientIds: [RRListHandle, []],
    getConcentrationControlCoefficientIds: [RRListHandle, []],
    getUnscaledElasticityMatrix: [RRMatrixHandle, []],
    getScaledElasticityMatrix: [RRMatrixHandle, []],
    getScaledFloatingSpeciesElasticity: [ref.types.int32, [ref.types.CString, ref.types.CString, ref.types.double]],
    getUnscaledConcentrationControlCoefficientMatrix: [RRMatrixHandle, []],
    getScaledConcentrationControlCoefficientMatrix: [RRMatrixHandle, []],
    getUnscaledFluxControlCoefficientMatrix: [RRMatrixHandle, []],
    getScaledFluxControlCoefficientMatrix: [RRMatrixHandle, []],
    getuCC: [ref.types.int32, [ref.types.CString, ref.types.CString, ref.types.double]],
    getCC: [ref.types.int32, [ref.types.CString, ref.types.CString, ref.types.double]],
    getEE: [ref.types.int32, [ref.types.CString, ref.types.CString, ref.types.double]],
    getuEE: [ref.types.int32, [ref.types.CString, ref.types.CString, ref.types.double]],
    getScaledFloatingSpeciesElasticity: [ref.types.int32, [ref.types.CString, ref.types.CString, ref.types.double]],
    getNumberOfRules: [ref.types.int32, []],
    resultToString: [ref.types.CString, [RRResultHandle]],
    matrixToString: [ref.types.CString, [RRMatrixHandle]],
    vectorToString: [ref.types.CString, [RRVectorHandle]],
    getNumberOfStringElements: [ref.types.int32, [RRStringArrayHandle]],
    getStringElement: [ref.types.CString, [RRStringArrayHandle, ref.types.int32]],
    stringArrayToString: [ref.types.CString, [RRStringArrayHandle]],
    listToString: [ref.types.CString, [RRListHandle]],
    freeResult: [ref.types.int32, [RRResultHandle]],
    freeText: [ref.types.int32, [ref.types.CString]],
    freeStringArray: [ref.types.int32, [RRStringArrayHandle]],
    freeVector: [ref.types.int32, [RRVectorHandle]],
    freeMatrix: [ref.types.int32, [RRMatrixHandle]],
    freeCCode: [ref.types.int32, [RRCCodeHandle]],
    Pause: [ref.types.void, []],
    getVectorLength: [ref.types.int32, [RRVectorHandle]],
    createVector: [RRVectorHandle, [ref.types.int32]],
    getVectorElement: [ref.types.int32, [RRVectorHandle, ref.types.int32, ref.types.double]],
    setVectorElement: [ref.types.int32, [RRVectorHandle, ref.types.int32, ref.types.double]],
    createRRMatrix: [RRMatrixHandle, [ref.types.int32, ref.types.int32]],
    getMatrixNumRows: [ref.types.int32, [RRMatrixHandle]],
    getMatrixNumCols: [ref.types.int32, [RRMatrixHandle]],
    getMatrixElement: [ref.types.int32, [RRMatrixHandle, ref.types.int32, ref.types.int32, ref.types.double]],
    setMatrixElement: [ref.types.int32, [RRMatrixHandle, ref.types.int32, ref.types.int32, ref.types.double]],
    getResultNumRows: [ref.types.int32, [RRResultHandle]],
    getResultNumCols: [ref.types.int32, [RRResultHandle]],
    getResultElement: [ref.types.int32, [RRResultHandle, ref.types.int32, ref.types.int32, ref.types.double]],
    getResultColumnLabel: [ref.types.CString, [RRResultHandle, ref.types.int32]],
    getCCodeHeader: [ref.types.CString, [RRCCodeHandle]],
    getCCodeSource: [ref.types.CString, [RRCCodeHandle]],
    getCSourceFileName: [ref.types.CString, []],
    createRRList: [RRListHandle, []],
    freeRRList: [ref.types.void, [RRListHandle]],
    getListLength: [ref.types.int32, [RRListHandle]],
    createIntegerItem: [RRListItemHandle, [ref.types.int32]],
    createDoubleItem: [RRListItemHandle, [ref.types.double]],
    createStringItem: [RRListItemHandle, [ref.types.CString]],
    createListItem: [RRListItemHandle, [voidPtr]],
    addItem: [ref.types.int32, [RRListHandle, RRListItemHandlePtr]],
    getListItem: [RRListItemHandle, [RRListHandle, ref.types.int32]],
    isListItemInteger: [ref.types.int32, [RRListItemHandle]],
    isListItemDouble: [ref.types.int32, [RRListItemHandle]],
    isListItemString: [ref.types.int32, [RRListItemHandle]],
    isListItemList: [ref.types.int32, [RRListItemHandle]],
    isListItem: [ref.types.int32, [RRListItemHandle, ref.types.uint32]],
    getIntegerListItem: [ref.types.int32, [RRListItemHandle, ref.types.int32]],
    getDoubleListItem: [ref.types.int32, [RRListItemHandle, ref.types.double]],
    getStringListItem: [ref.types.CString, [RRListItemHandle]],
    getList: [RRListHandle, [RRListItemHandle]],
    //loadPlugins: [ref.types.int32, []],
    //unLoadPlugins: [ref.types.int32, []],
    //getNumberOfPlugins: [ref.types.int32, []],
    //getPluginInfo: [ref.types.CString, [ref.types.CString]],
    //executePlugin: [ref.types.int32, [ref.types.CString]],
});
